<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vscing.model.mapper.PermissionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.vscing.model.entity.Permission">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="menu_id" property="menuId" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="code" property="code" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="created_by" property="createdBy" jdbcType="BIGINT" />
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
        <result column="updated_by" property="updatedBy" jdbcType="BIGINT" />
        <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
        <result column="deleted_by" property="deletedBy" jdbcType="BIGINT" />
    </resultMap>

    <!-- 定义一个SQL片段，用于指定表名 -->
    <sql id="tableName">
        vscing_permission
    </sql>
    <sql id="rolePermissionTableName">
        vscing_role_permission
    </sql>

    <!-- 查询用户列表 -->
    <select id="getList" resultMap="BaseResultMap">
        SELECT * FROM <include refid="tableName" />
        <where>
            deleted_at IS NULL
            <if test="name != null">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="name != null">
                AND code LIKE CONCAT('%', #{code}, '%')
            </if>
            <if test="status != null">
                AND status LIKE CONCAT('%', #{status}, '%')
            </if>
        </where>
    </select>

    <!-- 根据 ID 查询 -->
    <select id="selectById" parameterType="long" resultMap="BaseResultMap">
        SELECT * FROM <include refid="tableName" /> WHERE id = #{id,jdbcType=BIGINT} and deleted_at IS NULL
    </select>

    <!-- 插入信息 -->
    <insert id="insert" parameterType="com.vscing.model.entity.Permission">
        INSERT INTO <include refid="tableName" />
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="menuId != null">menu_id,</if>
            <if test="name != null">name,</if>
            <if test="code != null">code,</if>
            <if test="status != null">status,</if>
            <if test="createdBy != null">created_by</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id, jdbcType=BIGINT},</if>
            <if test="menuId != null">#{menuId, jdbcType=BIGINT},</if>
            <if test="name != null">#{name, jdbcType=VARCHAR},</if>
            <if test="code != null">#{code, jdbcType=VARCHAR},</if>
            <if test="status != null">#{status, jdbcType=TINYINT},</if>
            <if test="createdBy != null">#{createdBy, jdbcType=BIGINT}</if>
        </trim>
    </insert>

    <!-- 更新信息 -->
    <update id="update" parameterType="com.vscing.model.entity.Permission">
        UPDATE <include refid="tableName" />
        <set>
            <if test="menuId != null">menu_id = #{menuId, jdbcType=BIGINT},</if>
            <if test="name != null">name = #{name, jdbcType=VARCHAR},</if>
            <if test="code != null">code = #{code, jdbcType=VARCHAR},</if>
            <if test="status != null">status = #{status, jdbcType=TINYINT},</if>
            <if test="updatedBy != null">updated_by = #{updatedBy, jdbcType=BIGINT}</if>
        </set>
        WHERE id = #{id, jdbcType=BIGINT}
    </update>

    <!-- 根据 ID 软删除用户 -->
    <update id="softDeleteById" parameterType="map">
        UPDATE <include refid="tableName" />
        SET deleted_at = NOW(),
        deleted_by = #{deleterId, jdbcType=BIGINT}
        WHERE id = #{id, jdbcType=BIGINT}
    </update>

    <!-- 根据 角色ID 查询关联菜单信息 -->
    <select id="getPermissionsByRoleId" parameterType="long" resultMap="BaseResultMap">
        SELECT p.*
        FROM <include refid="tableName" /> p
        INNER JOIN <include refid="rolePermissionTableName" /> rp ON p.id = rp.permission_id
        WHERE rp.role_id = #{id, jdbcType=BIGINT}
    </select>

    <!-- 根据 角色ID 查询关联菜单信息 -->
    <select id="getPermissionsByRoleIds" parameterType="java.util.List" resultMap="BaseResultMap">
        SELECT p.*
        FROM <include refid="tableName" /> p
        INNER JOIN <include refid="rolePermissionTableName" /> rp ON p.id = rp.permission_id
        WHERE rp.role_id IN
        <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
            #{roleId, jdbcType=BIGINT}
        </foreach>
    </select>

    <!-- 根据 角色ID 删除关联信息 -->
    <delete id="deletePermissionsByRoleId" parameterType="long">
        DELETE FROM <include refid="rolePermissionTableName" /> WHERE role_id=#{id}
    </delete>

    <!-- 根据 角色ID 增加关联信息 -->
    <insert id="insertPermissionsBatch" parameterType="map">
        INSERT INTO <include refid="rolePermissionTableName" /> (role_id, permission_id)
        VALUES
        <foreach collection="permissionIds" item="permissionId" separator=",">
            (#{id}, #{permissionId})
        </foreach>
    </insert>

</mapper>
