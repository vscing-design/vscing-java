<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vscing.model.mapper.ShowMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.vscing.model.entity.Show">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="tp_show_id" property="tpShowId" jdbcType="BIGINT" />
        <result column="supplier_id" property="supplierId" jdbcType="BIGINT" />
        <result column="cinema_id" property="cinemaId" jdbcType="BIGINT" />
        <result column="movie_id" property="movieId" jdbcType="BIGINT" />
        <result column="hall_name" property="hallName" jdbcType="VARCHAR" />
        <result column="duration" property="duration" jdbcType="INTEGER" />
        <result column="show_time" property="showTime" jdbcType="TIMESTAMP" />
        <result column="stop_sell_time" property="stopSellTime" jdbcType="TIMESTAMP" />
        <result column="show_version_type" property="showVersionType" jdbcType="VARCHAR" />
        <result column="show_price" property="showPrice" jdbcType="DECIMAL" />
        <result column="user_price" property="userPrice" jdbcType="DECIMAL" />
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="created_by" property="createdBy" jdbcType="BIGINT" />
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
        <result column="updated_by" property="updatedBy" jdbcType="BIGINT" />
        <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
        <result column="deleted_by" property="deletedBy" jdbcType="BIGINT" />
    </resultMap>

    <!-- 定义一个SQL片段，用于指定表名 -->
    <sql id="tableName">
        vscing_show
    </sql>
    <sql id="supplierTableName">
        vscing_supplier
    </sql>
    <sql id="cinemaTableName">
        vscing_cinema
    </sql>
    <sql id="movieTableName">
        vscing_movie
    </sql>
    <sql id="showAreaTableName">
        vscing_show_area
    </sql>

    <!-- 查询列表 -->
    <select id="getList" resultType="com.vscing.model.vo.ShowListVo">
        SELECT
            s.*,
            s1.name as supplierName,
            m.name as movieName,
            c.name as cinemaName,
            c.province_name as provinceName,
            c.city_name as cityName,
            c.district_name as districtName,
            c.address as address
        FROM <include refid="tableName" /> s
        LEFT JOIN <include refid="supplierTableName" /> s1 ON s.supplier_id = s1.id
        LEFT JOIN <include refid="cinemaTableName" /> c ON s.cinema_id = c.id
        LEFT JOIN <include refid="movieTableName" /> m ON s.movie_id = m.id
        <where>
            s.deleted_at IS NULL
            <!--            <if test="status != null and status != 0">-->
            <!--                AND c.status = #{status}-->
            <!--            </if>-->
            <if test="cinemaId != null">
                AND s.cinema_id = #{cinemaId}
            </if>
            <if test="provinceId != null">
                AND c.province_id = #{provinceId}
            </if>
            <if test="cityId != null">
                AND c.city_id = #{cityId}
            </if>
            <if test="districtId != null">
                AND c.district_id = #{districtId}
            </if>
            <if test="cinemaName != null">
                AND c.name LIKE CONCAT('%', #{cinemaName}, '%')
            </if>
            <if test="supplierName != null">
                AND s1.name LIKE CONCAT('%', #{supplierName}, '%')
            </if>
        </where>
    </select>

    <!-- 根据cinemaId、supplierId查询全部列表 -->
    <select id="getListByCinemaIdAndSupplierId" resultType="com.vscing.model.vo.ShowListVo">
        SELECT
            s.supplier_id,
            s.cinema_id,
            s.movie_id,
            s.id,
            s.hall_name,
            s.show_time,
            s.duration,
            s.show_version_type,
            s.stop_sell_time,
            m.name as movieName
        FROM <include refid="tableName" /> s
        LEFT JOIN <include refid="movieTableName" /> m ON s.movie_id = m.id
        <where>
            <if test="cinemaId != null">
                AND s.cinema_id = #{cinemaId}
            </if>
            <if test="supplierId != null">
                AND s.supplier_id = #{supplierId}
            </if>
            AND s.stop_sell_time > NOW()
            AND s.deleted_at IS NULL
        </where>
    </select>

    <!-- 根据cinemaId查询全部场次列表 -->
    <select id="selectByCinemaId" parameterType="long" resultType="com.vscing.model.vo.CinemaApiDetailsShowVo">
        SELECT
            s.supplier_id as supplierId,
            s.movie_id as movieId,
            s.id as showId,
            s.hall_name as hallName,
            s.show_time as showTime,
            s.duration,
            s.show_version_type as showVersionType,
            s.stop_sell_time as stopSellTime,
            m.name as movieName,
            m.publish_date as publishDate,
            m.director,
            m.cast,
            m.intro,
            m.version_type as versionType,
            m.language,
            m.movie_type as movieType,
            m.poster_url as posterUrl,
            m.plot_url as plotUrl,
            m.grade,
            m.like,
            m.publish_status as publishStatus
        FROM <include refid="tableName" /> s
        LEFT JOIN <include refid="movieTableName" /> m ON s.movie_id = m.id
        <where>
            <if test="cinemaId != null">
                AND s.cinema_id = #{cinemaId}
            </if>
            AND s.stop_sell_time > NOW()
            AND s.deleted_at IS NULL
        </where>
    </select>

    <!-- 根据MovieApiListDto查询全部列表 -->
    <select id="selectByMovieApiList" resultType="com.vscing.model.vo.MovieApiVo">
<!--        SELECT-->
<!--            m.id,-->
<!--            m.name,-->
<!--            m.movie_type,-->
<!--            m.poster_url,-->
<!--            m.like,-->
<!--            m.publish_date,-->
<!--            m.version_type,-->
<!--            m.language,-->
<!--            m.director,-->
<!--            m.cast,-->
<!--            m.publish_status,-->
<!--            m.grade,-->
<!--            subq.min_show_price as minShowPrice,-->
<!--            subq.min_user_price as minUserPrice-->
<!--        FROM <include refid="movieTableName" /> m-->
<!--        INNER JOIN (-->
<!--            SELECT-->
<!--                s.movie_id,-->
<!--                MIN(sa.user_price) as min_user_price,-->
<!--                MIN(sa.show_price) as min_show_price-->
<!--            FROM <include refid="tableName" /> s-->
<!--            INNER JOIN <include refid="cinemaTableName" /> c ON s.cinema_id = c.id-->
<!--            INNER JOIN <include refid="showAreaTableName" /> sa ON sa.show_id = s.id-->
<!--            <where>-->
<!--                <if test="cityId != null">-->
<!--                    AND c.city_id = #{cityId}-->
<!--                </if>-->
<!--                <if test="districtId != null">-->
<!--                    AND c.district_id = #{districtId}-->
<!--                </if>-->
<!--                AND s.stop_sell_time >= NOW()-->
<!--            </where>-->
<!--            GROUP BY s.movie_id-->
<!--            ORDER BY s.stop_sell_time ASC-->
<!--        ) subq ON m.id = subq.movie_id-->
<!--        <where>-->
<!--            <if test="name != null and name != ''">-->
<!--                AND m.name LIKE CONCAT(#{name}, '%')-->
<!--            </if>-->
<!--            <if test="publishStatus != null and publishStatus != ''">-->
<!--                AND m.publish_status = #{publishStatus}-->
<!--            </if>-->
<!--        </where>-->
<!--        ORDER BY m.publish_date DESC-->

        SELECT
        m.id,
        m.name,
        m.movie_type,
        m.poster_url,
        m.like,
        m.publish_date,
        m.version_type,
        m.language,
        m.director,
        m.cast,
        m.publish_status,
        m.grade,
        MIN(sa.user_price) AS minUserPrice,
        MIN(sa.show_price) AS minShowPrice
        FROM <include refid="movieTableName" /> m
        INNER JOIN <include refid="tableName" /> s ON s.movie_id = m.id
        INNER JOIN <include refid="cinemaTableName" /> c ON s.cinema_id = c.id
        INNER JOIN <include refid="showAreaTableName" /> sa ON sa.show_id = s.id
        <where>
            <if test="cityId != null">
                AND c.city_id = #{cityId}
            </if>
            <if test="districtId != null">
                AND c.district_id = #{districtId}
            </if>
            <if test="publishStatus != null and publishStatus != ''">
                <choose>
                    <when test="publishStatus == 'hot'">
                        AND m.publish_date <![CDATA[ <= ]]> CURDATE()
                    </when>
                    <when test="publishStatus == 'wait'">
                        AND m.publish_date <![CDATA[ > ]]> CURDATE()
                    </when>
                </choose>
            </if>
            AND s.stop_sell_time >= NOW()
            <if test="name != null and name != ''">
                AND m.name LIKE CONCAT(#{name}, '%')
            </if>
        </where>
        GROUP BY m.id
        ORDER BY m.publish_date DESC
    </select>

    <!-- 根据CinemaApiListDto查询全部列表 -->
    <select id="selectByCinemaApiList" resultType="com.vscing.model.vo.CinemaApiVo">
<!--        SELECT-->
<!--        c.id,-->
<!--        c.name,-->
<!--        c.province_name as provinceName,-->
<!--        c.city_name as cityName,-->
<!--        c.district_name as districtName,-->
<!--        c.address,-->
<!--        c.lng,-->
<!--        c.lat,-->
<!--        (-->
<!--            6371 * acos(-->
<!--            cos(radians(#{lat, jdbcType=DECIMAL})) *-->
<!--            cos(radians(c.lat)) *-->
<!--            cos(radians(c.lng) - radians(#{lng, jdbcType=DECIMAL})) +-->
<!--            sin(radians(#{lat, jdbcType=DECIMAL})) *-->
<!--            sin(radians(c.lat))-->
<!--        )-->
<!--        ) AS distance,-->
<!--        subq.min_show_price as maxPrice,-->
<!--        subq.min_user_price as minPrice-->
<!--        FROM <include refid="cinemaTableName" /> c-->
<!--        INNER JOIN (-->
<!--            SELECT-->
<!--                s.cinema_id,-->
<!--                MIN(sa.user_price) as min_user_price,-->
<!--                MIN(sa.show_price) as min_show_price-->
<!--            FROM <include refid="tableName" /> s-->
<!--            INNER JOIN <include refid="cinemaTableName" /> c ON s.cinema_id = c.id-->
<!--            INNER JOIN <include refid="showAreaTableName" /> sa ON sa.show_id = s.id-->
<!--            <where>-->
<!--                AND s.stop_sell_time >= NOW()-->
<!--            </where>-->
<!--            GROUP BY s.cinema_id-->
<!--            ORDER BY s.stop_sell_time ASC-->
<!--        ) subq ON c.id = subq.cinema_id-->
<!--        <where>-->
<!--            &lt;!&ndash; 动态条件 &ndash;&gt;-->
<!--            <if test="keyword != null and keyword != ''">-->
<!--                AND (c.name LIKE CONCAT('%', #{keyword}, '%')-->
<!--                OR c.address LIKE CONCAT('%', #{keyword}, '%'))-->
<!--            </if>-->
<!--            <if test="cityId != null">-->
<!--                AND c.city_id = #{cityId}-->
<!--            </if>-->
<!--            <if test="districtId != null">-->
<!--                AND c.district_id = #{districtId}-->
<!--            </if>-->
<!--        </where>-->
<!--        <choose>-->
<!--            <when test="orderBy == 1">-->
<!--                ORDER BY distance ASC-->
<!--            </when>-->
<!--            <when test="orderBy == 2">-->
<!--                ORDER BY subq.min_show_price ASC-->
<!--            </when>-->
<!--        </choose>-->

        SELECT
            c.id,
            c.name,
            c.province_name as provinceName,
            c.city_name as cityName,
            c.district_name as districtName,
            c.address,
            c.lng,
            c.lat,
            (
                6371 * acos(
                    cos(radians(#{lat})) *
                    cos(radians(c.lat)) *
                    cos(radians(c.lng) - radians(#{lng})) +
                    sin(radians(#{lat})) *
                    sin(radians(c.lat))
                )
            ) AS distance,
            s.show_time as showTime,
            MIN(sa.user_price) as minPrice,
            MIN(sa.show_price) as maxPrice
        FROM <include refid="cinemaTableName" /> c
        INNER JOIN <include refid="tableName" /> s ON s.cinema_id = c.id
        INNER JOIN <include refid="showAreaTableName" /> sa ON sa.show_id = s.id
        <where>
            <if test="cityId != null">
                AND c.city_id = #{cityId}
            </if>
            <if test="districtId != null">
                AND c.district_id = #{districtId}
            </if>
            AND s.stop_sell_time > NOW()
            <!-- 动态条件 -->
            <if test="keyword != null and keyword != ''">
                AND (c.name LIKE CONCAT('%', #{keyword}, '%')
                OR c.address LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
        GROUP BY c.id
        <choose>
            <when test="orderBy == 1">
                ORDER BY s.stop_sell_time ASC, distance ASC
            </when>
            <when test="orderBy == 2">
                ORDER BY s.stop_sell_time ASC, MIN(sa.show_price) ASC
            </when>
            <otherwise>
                ORDER BY s.stop_sell_time ASC
            </otherwise>
        </choose>
    </select>

    <!-- 根据MovieApiCinemaDto查询全部列表 -->
    <select id="selectByMovieApiCinema" resultType="com.vscing.model.vo.CinemaApiVo">
<!--        SELECT-->
<!--        c.id,-->
<!--        c.name,-->
<!--        c.province_name as provinceName,-->
<!--        c.city_name as cityName,-->
<!--        c.district_name as districtName,-->
<!--        c.address,-->
<!--        c.lng,-->
<!--        c.lat,-->
<!--        (-->
<!--        6371 * acos(-->
<!--        cos(radians(#{lat, jdbcType=DECIMAL})) *-->
<!--        cos(radians(c.lat)) *-->
<!--        cos(radians(c.lng) - radians(#{lng, jdbcType=DECIMAL})) +-->
<!--        sin(radians(#{lat, jdbcType=DECIMAL})) *-->
<!--        sin(radians(c.lat))-->
<!--        )-->
<!--        ) AS distance,-->
<!--        s.show_time as showTime,-->
<!--        subq.min_show_price as maxPrice,-->
<!--        subq.min_user_price as minPrice-->
<!--        FROM <include refid="tableName" /> s-->
<!--        INNER JOIN <include refid="cinemaTableName" /> c ON s.cinema_id = c.id-->
<!--        INNER JOIN (-->
<!--        SELECT-->
<!--        s.cinema_id,-->
<!--        MIN(sa.user_price) as min_user_price,-->
<!--        MIN(sa.show_price) as min_show_price-->
<!--        FROM <include refid="tableName" /> s-->
<!--        INNER JOIN <include refid="cinemaTableName" /> c ON s.cinema_id = c.id-->
<!--        INNER JOIN <include refid="showAreaTableName" /> sa ON sa.show_id = s.id-->
<!--        <where>-->
<!--            <if test="movieId != null">-->
<!--                AND s.movie_id = #{movieId}-->
<!--            </if>-->
<!--            AND s.stop_sell_time > NOW()-->
<!--        </where>-->
<!--        GROUP BY s.cinema_id-->
<!--        ORDER BY s.stop_sell_time ASC-->
<!--        ) subq ON c.id = subq.cinema_id-->
<!--        <where>-->
<!--            <if test="cityId != null">-->
<!--                AND c.city_id = #{cityId}-->
<!--            </if>-->
<!--            <if test="districtId != null">-->
<!--                AND c.district_id = #{districtId}-->
<!--            </if>-->
<!--            &lt;!&ndash; 动态条件 &ndash;&gt;-->
<!--            <if test="keyword != null and keyword != ''">-->
<!--                AND (c.name LIKE CONCAT('%', #{keyword}, '%')-->
<!--                OR c.address LIKE CONCAT('%', #{keyword}, '%'))-->
<!--            </if>-->
<!--        </where>-->
<!--        <choose>-->
<!--            <when test="orderBy == 1">-->
<!--                ORDER BY distance ASC-->
<!--            </when>-->
<!--            <when test="orderBy == 2">-->
<!--                ORDER BY subq.min_show_price ASC-->
<!--            </when>-->
<!--        </choose>-->

        SELECT
        c.id,
        c.name,
        c.province_name AS provinceName,
        c.city_name AS cityName,
        c.district_name AS districtName,
        c.address,
        c.lng,
        c.lat,
        (
        6371 * acos(
        cos(radians(#{lat})) *
        cos(radians(c.lat)) *
        cos(radians(c.lng) - radians(#{lng})) +
        sin(radians(#{lat})) *
        sin(radians(c.lat))
        )
        ) AS distance,
        s.show_time AS showTime,
        MIN(sa.user_price) AS minPrice,
        MIN(sa.show_price) AS maxPrice
        FROM <include refid="tableName" /> s
        INNER JOIN <include refid="cinemaTableName" /> c ON s.cinema_id = c.id
        INNER JOIN <include refid="showAreaTableName" /> sa ON sa.show_id = s.id
        <where>
            <if test="movieId != null">
                AND s.movie_id = #{movieId}
            </if>
            <if test="cityId != null">
                AND c.city_id = #{cityId}
            </if>
            <if test="districtId != null">
                AND c.district_id = #{districtId}
            </if>
            AND s.stop_sell_time > NOW()
            <!-- 动态条件 -->
            <if test="keyword != null and keyword != ''">
                AND (c.name LIKE CONCAT('%', #{keyword}, '%')
                OR c.address LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
        GROUP BY c.id
        <choose>
            <when test="orderBy == 1">
                ORDER BY s.stop_sell_time ASC, distance ASC
            </when>
            <when test="orderBy == 2">
                ORDER BY s.stop_sell_time ASC, MIN(sa.show_price) ASC
            </when>
            <otherwise>
                ORDER BY s.stop_sell_time ASC
            </otherwise>
        </choose>
    </select>

    <!-- 根据 ID 查询 -->
    <select id="selectById" parameterType="long" resultMap="BaseResultMap">
        SELECT * FROM <include refid="tableName" /> WHERE id = #{id,jdbcType=BIGINT} and deleted_at IS NULL
    </select>

    <!-- 根据 tpShowId 查询 -->
    <select id="selectByTpShowId" parameterType="String" resultMap="BaseResultMap">
        SELECT * FROM <include refid="tableName" /> WHERE tp_show_id = #{tpShowId,jdbcType=BIGINT} and deleted_at IS NULL
    </select>

    <!-- 根据 ID 查询 -->
    <select id="selectByOrderDetails" parameterType="long" resultType="com.vscing.model.vo.OrderApiConfirmDetailsVo">
        SELECT
            s.id as showId,
            s.hall_name as hallName,
            s.show_time as showTime,
            s.stop_sell_time as stopSellTime,
            s.show_version_type as showVersionType,
            s.show_price as showPrice,
            s.user_price as userPrice,
            c.name as cinemaName,
            m.name as movieName,
            m.poster_url as posterUrl
        FROM <include refid="tableName" /> s
        LEFT JOIN <include refid="cinemaTableName" /> c ON s.cinema_id = c.id
        LEFT JOIN <include refid="movieTableName" /> m ON s.movie_id = m.id
        WHERE s.id = #{id,jdbcType=BIGINT} and s.deleted_at IS NULL
    </select>

    <!-- 插入信息 -->
    <insert id="insert" parameterType="com.vscing.model.entity.Show">
        INSERT INTO <include refid="tableName" />
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="tpShowId != null">tp_show_id,</if>
            <if test="supplierId != null">supplier_id,</if>
            <if test="cinemaId != null">cinema_id,</if>
            <if test="movieId != null">movie_id,</if>
            <if test="hallName != null">hall_name,</if>
            <if test="duration != null">duration,</if>
            <if test="showTime != null">show_time,</if>
            <if test="stopSellTime != null">stop_sell_time,</if>
            <if test="showVersionType != null">show_version_type,</if>
            <if test="showPrice != null">show_price,</if>
            <if test="userPrice != null">user_price,</if>
            <if test="createdBy != null">created_by</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id, jdbcType=BIGINT},</if>
            <if test="tpShowId != null">#{tpShowId, jdbcType=BIGINT},</if>
            <if test="supplierId != null">#{supplierId, jdbcType=BIGINT},</if>
            <if test="cinemaId != null">#{cinemaId, jdbcType=BIGINT},</if>
            <if test="movieId != null">#{movieId, jdbcType=BIGINT},</if>
            <if test="hallName != null">#{hallName, jdbcType=VARCHAR},</if>
            <if test="duration != null">#{duration,jdbcType=INTEGER},</if>
            <if test="showTime != null">#{showTime,jdbcType=TIMESTAMP},</if>
            <if test="stopSellTime != null">#{stopSellTime,jdbcType=TIMESTAMP},</if>
            <if test="showVersionType != null">#{showVersionType,jdbcType=VARCHAR},</if>
            <if test="showPrice != null">#{showPrice, jdbcType=DECIMAL},</if>
            <if test="userPrice != null">#{userPrice, jdbcType=DECIMAL},</if>
            <if test="createdBy != null">#{createdBy,jdbcType=BIGINT}</if>
        </trim>
    </insert>

    <!-- 更新信息 -->
    <update id="update" parameterType="com.vscing.model.entity.Show">
        UPDATE <include refid="tableName" />
        <set>
            <if test="hallName != null">hall_name = #{avatar,jdbcType=VARCHAR},</if>
            <if test="updatedBy != null">updated_by = #{updatedBy, jdbcType=BIGINT}</if>
        </set>
        WHERE id = #{id, jdbcType=BIGINT}
    </update>

    <!-- 根据 ID 软删除用户 -->
    <update id="softDeleteById" parameterType="map">
        UPDATE <include refid="tableName" />
        SET deleted_at = NOW(),
        deleted_by = #{deleterId, jdbcType=BIGINT}
        WHERE id = #{id, jdbcType=BIGINT}
    </update>

    <!-- 清空表 -->
    <delete id="truncateTable">
        TRUNCATE TABLE <include refid="tableName" />
    </delete>

    <!-- 批量插入或更新信息 -->
    <insert id="batchUpsert" parameterType="java.util.List">
        INSERT INTO <include refid="tableName" /> (
        id, tp_show_id, supplier_id, cinema_id, movie_id, hall_name, duration,
        show_time, stop_sell_time, show_version_type, show_price, user_price
        ) VALUES
        <foreach collection="list" item="record" separator=",">
            (
            #{record.id}, #{record.tpShowId}, #{record.supplierId}, #{record.cinemaId}, #{record.movieId}, #{record.hallName}, #{record.duration},
            #{record.showTime}, #{record.stopSellTime}, #{record.showVersionType}, #{record.showPrice}, #{record.userPrice}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        supplier_id = VALUES(supplier_id),
        tp_show_id = VALUES(tp_show_id),
        cinema_id = VALUES(cinema_id),
        movie_id = VALUES(movie_id),
        hall_name = VALUES(hall_name),
        duration = VALUES(duration),
        show_time = VALUES(show_time),
        stop_sell_time = VALUES(stop_sell_time),
        show_version_type = VALUES(show_version_type),
        show_price = VALUES(show_price),
        user_price = VALUES(user_price)
    </insert>

</mapper>
